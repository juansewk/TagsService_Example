// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TagsService.DataContext.Context;

#nullable disable

namespace TagsService.DataContext.Migrations
{
    [DbContext(typeof(TagsServiceContext))]
    partial class TagsServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TagsService.Models.DataModels.SubTagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int?>("TagModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TagModelId");

                    b.ToTable("SubTag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "SubTag example 1 - tag 1",
                            TagId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "SubTag example 2 - tag 1",
                            TagId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "SubTag example 3 - tag 1",
                            TagId = 1
                        });
                });

            modelBuilder.Entity("TagsService.Models.DataModels.TagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HexColor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Desciption example 1...",
                            HexColor = "#1B999B",
                            IsActive = true,
                            Name = "Tag example 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Desciption example 2...",
                            HexColor = "#ED217C",
                            IsActive = true,
                            Name = "Tag example 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Desciption example 3...",
                            HexColor = "#55DDFF",
                            IsActive = true,
                            Name = "Tag example 3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Desciption example 4...",
                            HexColor = "#FFFD82",
                            IsActive = true,
                            Name = "Tag example 4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Desciption example 5...",
                            HexColor = "#FF9B71",
                            IsActive = true,
                            Name = "Tag example 5"
                        });
                });

            modelBuilder.Entity("TagsService.Models.DataModels.SubTagModel", b =>
                {
                    b.HasOne("TagsService.Models.DataModels.TagModel", null)
                        .WithMany("SubTags")
                        .HasForeignKey("TagModelId");
                });

            modelBuilder.Entity("TagsService.Models.DataModels.TagModel", b =>
                {
                    b.Navigation("SubTags");
                });
#pragma warning restore 612, 618
        }
    }
}
